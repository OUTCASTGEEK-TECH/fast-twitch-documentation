(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{"7OsV":function(t,e,n){"use strict";n.r(e),n.d(e,"_frontmatter",(function(){return i})),n.d(e,"default",(function(){return l}));n("5hJT"),n("W1QL"),n("K/PF"),n("t91x"),n("75LO"),n("PJhk"),n("mXGw");var a=n("/FXl"),o=n("TjRS");n("aD51");function r(){return(r=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(t[a]=n[a])}return t}).apply(this,arguments)}var i={};void 0!==i&&i&&i===Object(i)&&Object.isExtensible(i)&&!i.hasOwnProperty("__filemeta")&&Object.defineProperty(i,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"README.md"}});var c={_frontmatter:i},s=o.a;function l(t){var e=t.components,n=function(t,e){if(null==t)return{};var n,a,o={},r=Object.keys(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,["components"]);return Object(a.b)(s,r({},c,n,{components:e,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"fast-twitch-documentation"},"Fast Twitch ",Object(a.b)("a",r({parentName:"h1"},{href:"https://outcastgeek-tech.github.io/fast-twitch-documentation/"}),"Documentation")),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"FastTwitch")," is intended to provide a clojurescript friendly API\nto popular NodeJs / Deno http servers. The goal is to play nice with\nthe existing javascript ecosystem, and replace the javascript tools\nand APIs, with clojurescript equivalents when possible to avoid bloat."),Object(a.b)("h2",{id:"using-fast-twitch"},"Using ",Object(a.b)("inlineCode",{parentName:"h2"},"fast-twitch")),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-sh"}),"# clone the FastTwitch Examples\ngit clone https://github.com/OUTCASTGEEK-TECH/fast-twitch-examples\n\ncd fast-twitch-examples/basic && npm install && npm run start-dev\n#then navigate to http://localhost:2121\n\n#or\n\ncd fast-twitch-examples/ft-web && npm install && npm run start-dev\n#then navigate to http://localhost:2222\n\n")),Object(a.b)("h2",{id:"features"},"Features"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Isomorphic / Universal Rendering"),Object(a.b)("li",{parentName:"ul"},"Endpoints Produce ",Object(a.b)("strong",{parentName:"li"},"html / json / transit")," "),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"CoreAsync")," support for your endpoints"),Object(a.b)("li",{parentName:"ul"},"Support for all of ",Object(a.b)("strong",{parentName:"li"},"ExpressJs "),"functionality (WIP)"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"ShadowCljs")," for compilation")),Object(a.b)("h2",{id:"roadmap"},"Roadmap"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Improve Documentation (on going)"),Object(a.b)("li",{parentName:"ul"},"Add Deno support"),Object(a.b)("li",{parentName:"ul"},"WASM Utilities"),Object(a.b)("li",{parentName:"ul"},"Support for additional NodeJs / Deno servers: ",Object(a.b)("strong",{parentName:"li"},"koa, hapi, oak")," etc")))}void 0!==l&&l&&l===Object(l)&&Object.isExtensible(l)&&!l.hasOwnProperty("__filemeta")&&Object.defineProperty(l,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"README.md"}}),l.isMDXComponent=!0}}]);
//# sourceMappingURL=component---readme-md-74cb933d4b71f31404da.js.map