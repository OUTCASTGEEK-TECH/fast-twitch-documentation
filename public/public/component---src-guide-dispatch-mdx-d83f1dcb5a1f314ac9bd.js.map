{"version":3,"sources":["webpack:///../src/guide/Dispatch.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","language","style","funky","isMDXComponent"],"mappings":"shBAUO,IAAMA,EAAe,Q,wMAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,YADR,YAGA,6FACA,YAAC,IAAD,CAAmBC,SAAS,UAAUC,MAAOC,IAAOH,QAAQ,qBAA5D,+GAOA,YAAC,IAAD,CAAmBC,SAAS,UAAUC,MAAOC,IAAOH,QAAQ,qBAA5D,oEAKA,YAAC,IAAD,CAAmBC,SAAS,UAAUC,MAAOC,IAAOH,QAAQ,qBAA5D,0GAOA,YAAC,IAAD,CAAmBC,SAAS,UAAUC,MAAOC,IAAOH,QAAQ,qBAA5D,2GAMA,YAAC,IAAD,CAAmBC,SAAS,UAAUC,MAAOC,IAAOH,QAAQ,qBAA5D,qGAMA,YAAC,IAAD,CAAmBC,SAAS,UAAUC,MAAOC,IAAOH,QAAQ,qBAA5D,0G,sMAWJH,EAAWO,gBAAiB","file":"component---src-guide-dispatch-mdx-d83f1dcb5a1f314ac9bd.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/chiefkemist/projects_workspace/ToDelete/docz/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport clojure from 'react-syntax-highlighter/dist/esm/languages/prism/clojure';\nimport { atomDark, coy, funky, okaidia, vs, twilight, xonokai } from 'react-syntax-highlighter/dist/esm/styles/prism';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h2 {...{\n      \"id\": \"dispatch\"\n    }}>{`Dispatch`}</h2>\n    <p>{`The dispatch namespace defines a multi method to handle the requests`}</p>\n    <SyntaxHighlighter language=\"clojure\" style={funky} mdxType=\"SyntaxHighlighter\">\n  {`\n    (ns dispatch\n      (:require [endpoints :as ep]\n                [fast-twitch.web-api :as web]))\n  `}\n    </SyntaxHighlighter>\n    <SyntaxHighlighter language=\"clojure\" style={funky} mdxType=\"SyntaxHighlighter\">\n  {`\n    (defmulti handle (fn [req-data] (:endpoint req-data)))\n  `}\n    </SyntaxHighlighter>\n    <SyntaxHighlighter language=\"clojure\" style={funky} mdxType=\"SyntaxHighlighter\">\n  {`\n    ;; public\n    (defmethod handle :home [req-data]\n               (ep/home (:req req-data)))\n  `}\n    </SyntaxHighlighter>\n    <SyntaxHighlighter language=\"clojure\" style={funky} mdxType=\"SyntaxHighlighter\">\n  {`\n    (defmethod handle :home-transit [req-data]\n               (ep/home-transit (:req req-data)))\n  `}\n    </SyntaxHighlighter>\n    <SyntaxHighlighter language=\"clojure\" style={funky} mdxType=\"SyntaxHighlighter\">\n  {`\n    (defmethod handle :home-json [req-data]\n               (ep/home-json (:req req-data)))\n  `}\n    </SyntaxHighlighter>\n    <SyntaxHighlighter language=\"clojure\" style={funky} mdxType=\"SyntaxHighlighter\">\n  {`\n    ;; default\n    (defmethod handle :default [_]\n               (web/send \"Not Found\"))\n  `}\n    </SyntaxHighlighter>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}