{"version":3,"sources":["webpack:///../src/index.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","language","style","funky","parentName","isMDXComponent"],"mappings":"whBAUO,IAAMA,EAAe,Q,+LAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,mBADR,mBAGA,yGACA,YAAC,IAAD,CAAmBC,SAAS,QAAQC,MAAOC,IAAOH,QAAQ,qBAA1D,4WAUA,2IACA,sBACE,kBAAII,WAAW,MAAK,sBAAQA,WAAW,MAAnB,mBAApB,6EACA,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAnB,uBAApB,+DACA,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAnB,iBAApB,qEACA,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAnB,mBAApB,6HACA,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAnB,eAApB,+HAEF,iBAAQ,CACN,GAAM,eADR,eAGA,yX,6LAKJP,EAAWQ,gBAAiB","file":"component---src-index-mdx-03ff96bec59291c73c86.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/OUTCASTGEEK-TECH/fast-twitch-documentation/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport clojure from 'react-syntax-highlighter/dist/esm/languages/prism/clojure';\nimport { atomDark, coy, funky, okaidia, vs, twilight, xonokai } from 'react-syntax-highlighter/dist/esm/styles/prism';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"getting-started\"\n    }}>{`Getting Started`}</h1>\n    <p>{`Create a new folder, initialize a new npm project and download node dependencies`}</p>\n    <SyntaxHighlighter language=\"shell\" style={funky} mdxType=\"SyntaxHighlighter\">\n  {`\n    mkdir -p your-new-project/src/main && cd your-new-project\n    npm init # follow the intructions\n    npm i body-parser cookie-parser cors create-react-class csurf --save\n    npm i express helmet js-joda moment morgan npm-run-all react react-dom --save\n    npm i serve-static source-map-support xhr2 --save\n    npm i nodemon shadow-cljs --save-dev\n  `}\n    </SyntaxHighlighter>\n    <p>{`Regardless of the technologies and tools behind them, a successful design system follows these guiding principles:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`It’s consistent`}</strong>{`. The way components are built and managed follows a predictable pattern.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`It’s self-contained`}</strong>{`. Your design system is treated as a standalone dependency.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`It’s reusable`}</strong>{`. You’ve built components so they can be reused in many contexts.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`It’s accessible`}</strong>{`. Applications built with your design system are usable by as many people as possible, no matter how they access the web.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`It’s robust`}</strong>{`. No matter the product or platform to which your design system is applied, it should perform with grace and minimal bugs.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"consistency\"\n    }}>{`Consistency`}</h2>\n    <p>{`Your first, most important task when starting out is to define the rules of your system, document them, and ensure that everyone follows them. When you have clearly documented code standards and best practices in place, designers and developers from across your organization can easily use and, more importantly, contribute to your design system.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}